#%Module1.0#####################################################################
#
# this module file tries to figure out as much as possible so it can just be
# copied to right filename and work
#
# modules should be structured like this:
# modulename/version
# or with a specific compiler
# modulename/version+compilermodulename-version
#
# Only a single / and a single + can be in the module path, so the compiler
# should be given as the module name with a - instead of / to separate 
# the name and version
#
#
# It will check for bin, lib, and man directories in the usual spots and
# set PATH, LD_LIBRARY_PATH and MANPATH if appropriate
#
# It will load the compiler module if one was specified
# 
#

# the next line will be replaced with the conflicts for this module

module load python/2.7.6

set modulename [string map {/ -} [module-info name]]

set mname [lindex [split [module-info name] "/"] 0]

set compiler ""

set mversiontmp [lindex [split [module-info name] "/"] end]
if { [string match "*+*" $mversiontmp ] } {
   set mversion [lindex [split $mversiontmp "+"] 0]
   set compiler [join [lrange [split $mversiontmp "+"] 1 end] "+"]
   set compileroutput "compiled with $compiler"
} else {
   set mversion $mversiontmp
   set compileroutput "compiled with the system compiler"
}

proc ModulesHelp { } {
   global version
   puts stderr "\tThis module sets up the environment for $mname $mversion $compileroutput."
}

module-whatis	"setup $mname $mversion $compileroutput"
conflict "$mname"

#set sys [uname sysname]
#set os [uname release]
#set arch [uname machine]

set ARCH [exec uname -m]

if [ module-info mode load ] {
   if { [string compare $compiler ""] != 0 } {
      #set compilermodulename [string map {- /} $compiler]
      if { [string match "*-*" $compiler] } {
         set i [string first "-" $compiler]
         set compilermodulename [string replace $compiler $i $i "/"]
      } else {
         set compilermodulename $compiler
      }
      module load $compilermodulename
      if { [is-loaded $compilermodulename] == 0 } {
         puts stderr "WARNING: Unable to load compiler module '$compilermodulename'"
         puts stderr "WARNING: Module '[module-info name]' may not work but loading anyway"
      }
   }
}
set appdir /software/connect-client-0.5.3/connect-client
if { [string compare $compiler ""] != 0 } {
      set    appdir   $appdir+$compiler
}

# Module dependencies 
#
# The following were inferred from the build environment: The
# person who prepared this module had these modules loaded at
# time of build.  All are commented out, because they might not
# be actual dependencies.  If one is (Python, in particular,
# is likely) then uncomment it.


if { [ file isdirectory /software/connect-client-0.5.3/bin ] } {
   prepend-path PATH /software/connect-client-0.5.3/bin
}

if { [ file isdirectory $appdir/bin  ] } {
    prepend-path    PATH             $appdir/bin
}
if { [ file isdirectory $appdir/sbin  ] } {
   prepend-path	    PATH 	     $appdir/sbin
}
if { [ file isdirectory $appdir/lib  ] } {
    prepend-path    LD_LIBRARY_PATH         $appdir/lib
# the next line will be replaced with LD_RUN_PATH if MODULELDRUNPATH option is set
#_MODULELDRUNPATH_
    prepend-path    LIBRARY_PATH            $appdir/lib
    if { [ file isdirectory $appdir/lib/pkgconfig  ] } {
        prepend-path    PKG_CONFIG_PATH         $appdir/lib/pkgconfig
    }
}

# On x86_64, check if $appdir/lib64 exists and isn't a symlink to $appdir/lib
# use exec readlink -f to canonicalize the name because the tcl readlink returns an
# error if it isn't really a symlink 
# this avoids the problem of a relative vs.  absolute symlink path
if {[ string compare $ARCH "x86_64" ] == 0 
    && [ file isdirectory $appdir/lib64  ]
    && [ string compare [ exec readlink -f $appdir/lib64 ] "$appdir/lib" ] != 0 } {
    prepend-path    LD_LIBRARY_PATH         $appdir/lib64
# the next line will be replaced with LD_RUN_PATH if MODULELDRUNPATH option is set
#_MODULELDRUNPATH64_
    prepend-path    LIBRARY_PATH            $appdir/lib64
    if { [ file isdirectory $appdir/lib64/pkgconfig  ] } {
        prepend-path    PKG_CONFIG_PATH         $appdir/lib64/pkgconfig
    }
}
if { [ file isdirectory $appdir/include ] } {
   prepend-path CPATH $appdir/include
}
if { [ file isdirectory $appdir/share/man  ] } {
    prepend-path    MANPATH         $appdir/share/man
}
if { [ file isdirectory $appdir/man  ] } {
    prepend-path    MANPATH         $appdir/man
}

prepend-path PATH /software/connect-client-0.5.3/bin
